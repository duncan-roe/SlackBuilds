#!/bin/sh

# Slackware build script to cloak pip installs

# Copyright 2017 Duncan Roe, Melbourne, Australia
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

ARCHIVES=${ARCHIVES:-"*.tar.?z* *.zip *.tar"}
[ -n "$PACKAGE" -o $(ls $ARCHIVES 2>/dev/null | wc -l) -gt 0 ] ||
  { echo 'No packages to install!'; exit 1; }
PACKAGE=${PACKAGE:-$(ls -t $ARCHIVES 2>/dev/null | head -n1)}

# If PACKAGE was not originally specified as an absolute path,
# now make it into one
[ $(echo $PACKAGE | cut -c1) = / ] || PACKAGE=$(pwd)/$PACKAGE

[ $(echo $PACKAGE | rev | cut -f1 -d.) = piz ] && USE_ZIP=true || USE_ZIP=false
PRGNAM=$(echo $PACKAGE | rev | cut -f1 -d/ | cut -f2- -d- | rev)
if $USE_ZIP; then
  VERSION=$(unzip -l $PACKAGE | head -n 4 | tail -n 1 | awk '{print $4}' |
    cut -f1 -d/ | rev | cut -f1 -d- | rev)
else
  VERSION=$(tar tf $PACKAGE | head -n1 | rev | cut -f1 -d- | rev | cut -f1 -d/)
fi
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}
PIP=${PIP:-pip2}
[ $PRGNAM != pip_install ] && NOT_PIP_INSTALL=true || NOT_PIP_INSTALL=false

if $NOT_PIP_INSTALL; then
  if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
      i?86) ARCH=i586 ;;
      arm*) ARCH=arm ;;
         *) ARCH=$( uname -m ) ;;
    esac
  fi
else
  ARCH=noarch
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
if $NOT_PIP_INSTALL; then
  $PIP install --root $PKG --no-deps --ignore-installed $PACKAGE

  # pip doesn't install documentation, so we have to
  cd $TMP
  rm -rf $PRGNAM-$VERSION
  if $USE_ZIP; then
    unzip $PACKAGE
  else
    tar xvf $PACKAGE
  fi
  cd $PRGNAM-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;
fi

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
  if $NOT_PIP_INSTALL; then
  cp -a setup.py $PKG/usr/doc/$PRGNAM-$VERSION
  for i in CHANGES* LICENSE* README* PKG-INFO*; do
    mv $i $PKG/usr/doc/$PRGNAM-$VERSION 2>/dev/null || true
  done
  for i in examples documentation; do
    [ ! -d $i ] || mv $i $PKG/usr/doc/$PRGNAM-$VERSION
  done
else
  cp -a $CWD/README $PKG/usr/doc/$PRGNAM-$VERSION
  chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
fi

mkdir -p $PKG/install
if $NOT_PIP_INSTALL; then
  cat > $PKG/install/slack-desc <<////
$PRGNAM: $PRGNAM (installed by $PIP)
$PRGNAM:
$PRGNAM: See /usr/doc/$PRGNAM-$VERSION/*
$PRGNAM: for more information
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
////
else
  cat $CWD/slack-desc > $PKG/install/slack-desc
fi

cd $PKG
if $NOT_PIP_INSTALL; then
  /sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-${BUILD}_$PIP$TAG.${PKGTYPE:-tgz}
else
  /sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
fi
